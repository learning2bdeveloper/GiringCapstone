<?php

require '../php/classes/database.classes.php';
require '../php/functions/salesIDAutoGenerator.php';

// $errors['response'] = "Can't exceed Quantity";

// echo json_encode($errors);
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $boss = $_POST['boss'];
    $empID = $_POST['empID'];
    $androidEmpFirstName = ucwords($_POST['androidEmpFirstName']);
    $androidEmpLastName = ucwords($_POST['androidEmpLastName']);
    $androidItemName = ucwords($_POST['androidItemName']);
    $androidItemDescription = strtoupper($_POST['androidItemDescription']);
    $androidItemQuantity = (int) $_POST['androidItemQuantity'];
    $androidItemAmount = (int) $_POST['androidItemAmount'];
    $androidItemTotal = (int) $_POST['androidItemTotal'];
    $currentDate = date("Y-m-d");

    $Database = new Database;

    $errors = array();
    if (!preg_match("/^[a-zA-Z ]*$/", $androidItemName)) {
        $errors[] = array(
            "response" => "Item Name should be letters only!",
        );
        echo json_encode($errors);
        die();
    }

    if (!preg_match("/^[a-zA-Z0-9 !?.]*$/", $androidItemDescription)) {
        $errors[] = array(
            "response" => "Enter valid Description!",
        );
        echo json_encode($errors);
        die();
    }

    if (empty(trim($androidItemDescription))) {
        $errors[] = array(
            "response" => "Description are all spaces!",
        );
        echo json_encode($errors);
        die();
    }

    // creating  generate ID
    $words = explode(" ", $androidItemName); // Split the string into an array of words

    $firstLetters = array_map(function ($word) { //1st param is function, 2nd param is the array

        return substr($word, 0, 1); // Get the first letter of each word

    }, $words); //this is the array gina gamit sa array_map

    $acronym = implode("", $firstLetters); // Concatenate the first letters

    $autoGeneratedID = getAutoGeneratedSalesID() + 1; // returns the maxID in the inventory table;

    $itemNo = $acronym . $autoGeneratedID;
    $empName = $androidEmpFirstName . ' ' . $androidEmpLastName;

    $query = "INSERT INTO `sales`(`salesID`, `date`, `Owner_admin_name_FK`, `empID_FK`, `empID_Name`, `item_name`, `description`, `amount`, `quantity`, `total`) VALUES (:salesID, :currentDate, :boss, :empID_FK, :empID_Name, :item_name, :description, :amount, :quantity, :total)";

    $stmt = $Database->connect()->prepare($query);

    $stmt->bindParam('boss', $boss);
    $stmt->bindParam('empID_FK', $empID);
    $stmt->bindParam('empID_Name', $empName);
    $stmt->bindParam('salesID', $itemNo);
    $stmt->bindParam('currentDate', $currentDate);
    $stmt->bindParam('item_name', $androidItemName);
    $stmt->bindParam('description', $androidItemDescription);
    $stmt->bindParam('quantity', $androidItemQuantity);
    $stmt->bindParam('total', $androidItemTotal);
    $stmt->bindParam('amount', $androidItemAmount);

    $stmt->execute();

    $stmt = null;

    $errors[] = array(
        "response" => "Success!",
    );
    echo json_encode($errors);
    die();
}
