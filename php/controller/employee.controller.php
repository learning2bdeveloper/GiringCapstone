<?php
date_default_timezone_set("Asia/Manila");
class EmployeeController extends Employee
{

    ////employee
    private $empID;
    private $empFirstName;
    private $empLastName;
    private $empCity;
    private $empStreet;
    private $empBirthdate;
    private $empPhone;
    private $empPwd;
    private $currentID;
    private $currentPhone;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function set_Create_employee_data($empFirstName, $empLastName, $empCity, $empStreet, $empBirthdate, $empPhone, $empPwd)
    {
        $this->empFirstName = $empFirstName;
        $this->empLastName = $empLastName;
        $this->empCity = $empCity;
        $this->empStreet = $empStreet;
        $this->empBirthdate = $empBirthdate;
        $this->empPhone = $empPhone;
        $this->empPwd = $empPwd;
    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function set_Update_employee_data($currentID, $currentPhone, $empID, $empFirstName, $empLastName, $empCity, $empStreet, $empBirthdate, $empPhone, $empPwd)
    {
        $this->empID = $empID;
        $this->empFirstName = $empFirstName;
        $this->empLastName = $empLastName;
        $this->empCity = $empCity;
        $this->empStreet = $empStreet;
        $this->empBirthdate = $empBirthdate;
        $this->empPhone = $empPhone;
        $this->empPwd = $empPwd;
        $this->currentID = $currentID;
        $this->currentPhone = $currentPhone;
    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function set_Delete_employee_data($empID)
    {
        $this->empID = $empID;
    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function createEmployee()
    {

        $errors = [];

        if ($this->is_employee_inputs_empty() == true) { // wla input
            $errors["inputsEmpty"] = "Input/s empty! ";
        }

        if ($this->is_employee_input_id_not_valid() == true) { //nd valid id
            $errors["inputIdNotValid"] = "ID is not valid!";
        }

        if ($this->is_employee_input_first_name_not_valid() == true) { // nd firstname valid
            $errors["inputFirstNameNotValid"] = "First Name is not valid!";
        }

        if ($this->is_employee_input_last_name_not_valid() == true) { // nd lastname valid
            $errors["inputLastNameNotValid"] = "Last Name is not valid!";
        }

        if ($this->is_employee_input_street_or_city_not_valid() == true) { // nd lastname valid
            $errors["inputStreetNotValid"] = "Street info is not valid!";
        }

        if ($this->is_employee_input_date_age_not_18() == true) { // nd lastname valid
            $errors["inputAgeIsNotOld"] = "You're too young!";
        }

        if ($this->is_employee_input_phone_number_not_valid() == true) { // nd lastname valid
            $errors["inputPhoneNumberNotValid"] = "Phone Number is not valid!";
        }

        if ($this->is_employee_id_taken() == true) { // employee id taken
            $errors["employeeID_Taken"] = "ID already taken!";
        }

        if ($this->is_employee_phone_number_taken() == true) { // employee phone number taken
            $errors["employeePhone_Taken"] = "Phone Number already taken!";
        }

        if ($errors) {
            //session_start();
            $_SESSION['employee_Create_Error'] = $errors;
            header('Location: ../views/employees.view/employee.php');
            die();
        }

        $boss = $_SESSION["admin_name"];
        $currentDate = date("Y-m-d");

        $autoIncrementedValue = getAutoGeneratedEmployeeID();

        $newEmployeeID = "e" . date('ymd') . ($autoIncrementedValue + 1);

        // $this->empID = str_pad($newEmployeeID, 10, "0", STR_PAD_LEFT);
        $this->empID = $newEmployeeID;

        $this->setEmployee($currentDate, $boss, $this->empID, $this->empFirstName, $this->empLastName, $this->empCity, $this->empStreet, $this->empBirthdate, $this->empPhone, $this->empPwd);

    }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function updateEmployee()
    {

        $errors = [];

        if ($this->is_employee_id_taken() == true) { // employee id taken
            $errors["employeeID_Taken"] = "ID already taken!";
        }

        if ($this->is_employee_phone_number_taken() == true) { // employee phone number taken
            $errors["employeePhone_Taken"] = "Phone Number already taken!";
        }

        if ($this->is_employee_inputs_empty() == true) {
            $errors["inputsEmpty"] = "Input/s are empty!";
        }

        if ($this->is_employee_input_id_not_valid() == true) { //nd valid id
            $errors["inputIdNotValid"] = "ID is not valid!";
        }

        if ($this->is_employee_input_first_name_not_valid() == true) { // nd firstname valid
            $errors["inputFirstNameNotValid"] = "First Name is not valid!";
        }

        if ($this->is_employee_input_last_name_not_valid() == true) { // nd lastname valid
            $errors["inputLastNameNotValid"] = "Last Name is not valid!";
        }

        if ($this->is_employee_input_street_or_city_not_valid() == true) { // nd lastname valid
            $errors["inputStreetNotValid"] = "Street info is not valid!";
        }

        if ($this->is_employee_input_date_age_not_18() == true) { // nd lastname valid
            $errors["inputAgeIsNotOld"] = "You're too young!";
        }

        if ($this->is_employee_input_phone_number_not_valid() == true) { // nd lastname valid
            $errors["inputPhoneNumberNotValid"] = "Phone Number is not valid!";
        }

        if ($errors) {
            //session_start();
            $_SESSION['employee_Edit_Error'] = $errors;

            echo "employee.php"; // kay fetch gamit nd form action.
            die();
        }
        $boss = $_SESSION["admin_name"];
        $this->salaryEmpID($boss, $this->currentID, $this->empID);
        $this->inventoryEmpID($boss, $this->currentID, $this->empID);
        $this->revenueEmpID($boss, $this->currentID, $this->empID); # done
        $this->expenseEmpID($boss, $this->currentID, $this->empID); # done
        $this->editEmployee($this->currentID, $boss, $this->empID, $this->empFirstName, $this->empLastName, $this->empCity, $this->empStreet, $this->empBirthdate, $this->empPhone, $this->empPwd);

    }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function removeEmployee()
    {

        $this->deleteEmployee($this->empID);

    }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//mga erorr handlers

    private function is_employee_input_id_not_valid()
    { // NOT SURE KILANLAN PA // kilanlan pa para sa update
        if (!preg_match("/^[a-zA-Z0-9]*$/", $this->empID)) {
            return true;
        } else {
            return false;
        }
    }

    private function is_employee_input_first_name_not_valid()
    {
        if (!preg_match("/^[a-zA-Z]*$/", str_replace(' ', '', $this->empFirstName))) {
            return true;
        }
        if (str_replace(' ', '', $this->empFirstName) === '') { // indi pwede spaces lng
            return true;
        }
        return false;
    }

    private function is_employee_input_last_name_not_valid()
    {
        if (!preg_match("/^[a-zA-Z]*$/", $this->empLastName)) {
            return true;
        } else {
            return false;
        }
    }

    private function is_employee_input_street_or_city_not_valid()
    { // done
        if (!preg_match("/^[a-zA-Z0-9 ]*$/", $this->empStreet) or !preg_match("/^[a-zA-Z ]*$/", $this->empCity)) {
            return true;
        } else {
            return false;
        }
    }

    private function is_employee_input_date_age_not_18()
    {
        $today = new DateTime();
        $userInputBirthDate = new DateTime($this->empBirthdate);
        $age = $today->diff($userInputBirthDate)->y;

        if ($age < 18) {
            return true;
        } else {
            return false;
        }
    }

    private function is_employee_input_phone_number_not_valid()
    {

        if (!preg_match("/^[0-9]*$/", $this->empPhone) or strlen($this->empPhone) !== 11) {
            return true;
        } else {
            return false;
        }
    }

    private function is_employee_inputs_empty()
    { // removed empID fixed
        if (empty($this->empFirstName) or empty($this->empLastName) or empty($this->empCity) or empty($this->empStreet) or empty($this->empBirthdate) or empty($this->empPhone) or empty($this->empPwd)) {
            return true;
        } else {
            return false;
        }
    }

    private function is_employee_id_taken()
    { // check kag kwaon pa
        if ($this->empID == $this->currentID) { // check kung same input sa update ang id sa id sa database nga same employee id then ok lng
            return false;
        }
        if ($this->check_employee_id($this->empID)) {
            return true;
        } else {
            return false;
        }
    }

    private function is_employee_phone_number_taken()
    { // done gin islan para e check ya lng ang id na ara sa owner nd na sa iban
        if ($this->empPhone == $this->currentPhone) { // check kung same input sa update ang id sa id sa database nga same employee id then ok lng
            return false;
        }
        if ($this->check_employee_phone_number($this->empPhone)) {
            return true;
        } else {
            return false;
        }
    }

/////////////////////////////////////////////////////////////

}
