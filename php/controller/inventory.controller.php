<?php
date_default_timezone_set("Asia/Manila"); //para chakto oras kay kung wla ni behind pila ka hrs kay laen na timezone gina sundan
class InventoryController extends Inventory
{
    private $boss;
    private $currentDate;

    private $itemNo;
    private $itemName;
    private $itemDescription;
    private $quantity;
    private $price;
    private $amount;
    private $id;
    private $currentItemNo;
    private $currentItemName;
    private $Amount; // variable para sa Amount ka category
    //private $placeholderItemNames = array();

    //dapat int ang good receipt number & quantity & amount
    public function setInventoryAddData($itemName, $itemDescription, $quantity, $price)
    {
        $this->amount = (int) $quantity * (int) $price; // para mag suma ka amount!
        $this->boss = $_SESSION['admin_name'];
        $this->currentDate = date("Y-m-d");
        $this->itemName = $itemName;
        $this->itemDescription = $itemDescription;
        $this->quantity = $quantity;
        $this->price = $price;
    }

    public function setInventoryUpdateData($currentItemNo, $currentItemName, $id, $itemNo, $itemName, $itemDescription, $quantity, $amount)
    {
        $this->id = $id;
        $this->itemNo = $itemNo;
        $this->itemName = $itemName;
        $this->itemDescription = $itemDescription;
        $this->quantity = $quantity;
        $this->amount = $amount;
        $this->currentItemNo = $currentItemNo;
        $this->currentItemName = $currentItemName;
    }

    public function setInventoryDeleteData($id, $currentAmount)
    {
        $this->boss = $_SESSION['admin_name'];
        $this->id = $id;
        $this->amount = $currentAmount;
    }
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public function addInventory()
    {

        $error = array();

        # ERROR HANDLER 1
        if ($this->is_inputs_empty()) {
            $error['empty_input'] = "Fill in the blanks!";
        }
        # ERROR HANDLER 2
        if ($this->is_item_name_not_a_string()) {
            $error['invalid_string_input'] = "Item Name should be a TEXT!";
        }
        # ERROR HANDLER 3
        if ($this->is_item_description_not_valid()) {
            $error["description_input_valid"] = "Description input Special Chars are not allowed!";
        }
        # ERROR HANDLER 4
        if ($this->is_item_description_have_consecutive_spaces()) {
            $error["description_have_consecutive_spaces"] = "Description should not have multiple spaces!";
        }
        # ERROR HANDLER 5
        if ($this->is_item_description_all_spaces()) {
            $error["description_are_all_spaces"] = "Description are all spaces!";
        }
        # ERROR HANDLER 6
        if ($this->item_name_already_exist()) {
            $error["item_name_already_exist"] = "Item Name already exist!";
        }
        # ERROR HANDLERS FOR CONNECTING TO BUDGET CATEGORY
        # ERROR HANDLER 7
        if ($this->is_inventory_category_budget_is_not_exist()) {
            $error["not_exist"] = "Inventory Budget Category does not Exist!";
        }
        # ERROR HANDLER 8
        if ($this->is_inventory_budget_not_good_enough()) {
            $error["over_budget"] = "Over Budget!";
        }

        if ($error) {
            $_SESSION['Inventory_Add_Error'] = $error;
            header('Location: ../views/inventory.view/inventory.php'); //header ni kay form ni ya nd same sa update
            die();
        }

        // creating  generate ID
        $words = explode(" ", $this->itemName); // Split the string into an array of words

        $firstLetters = array_map(function ($word) { //1st param is function, 2nd param is the array

            return substr($word, 0, 1); // Get the first letter of each word

        }, $words); //this is the array gina gamit sa array_map

        $acronym = implode("", $firstLetters); // Concatenate the first letters

        $autoGeneratedID = getAutoGeneratedItemNo() + 1; // returns the maxID in the inventory table;

        $this->itemNo = $acronym . $autoGeneratedID;

        $finalDecreasedEmployeeBudgetData = ((int) $this->Amount - (int) $this->amount); # Amount is budget amount          # amount is pila amount gin enter ka user
        $this->decrease_inventory_category_budget($finalDecreasedEmployeeBudgetData, $this->boss);
        #need mag dugang man sa expense mag bakal inventory
        $this->insertToExpenseInventory($this->boss, $this->currentDate, $this->Amount, $this->itemDescription, $this->amount);
        $this->createInventory($this->boss, $this->currentDate, $this->itemNo, $this->itemName, $this->itemDescription, $this->quantity, $this->price, $this->amount);

    }

    public function update_inventory()
    {
        $error = array();

        if ($this->is_update_inputs_empty() == true) {
            $error['empty_input'] = "Fill in the blanks!";
        }

        if ($this->is_update_quantity_and_amount_not_integer() == true) {
            $error['invalid_int_input'] = "Quantity, and Amount should be a NUMBER!";
        }

        if ($this->is_update_item_name_not_a_string() == true) {
            $error['invalid_string_input'] = "Item Name should be a TEXT!";
        }

        if ($this->is_update_item_no_not_valid() == true) {
            $error['invalid_item_no_input'] = "Item No. should not have special characters!";
        }

        if ($this->is_update_item_description_not_valid() == true) {
            $error["description_input_valid"] = "Description input Special Chars are not allowed!";
        }

        if ($this->is_update_item_description_have_consecutive_spaces() == true) {
            $error["description_have_consecutive_spaces"] = "Description should not have multiple spaces!";
        }

        if ($this->is_update_item_description_all_spaces() == true) {
            $error["description_are_all_spaces"] = "Description are all spaces!";
        }

        if ($this->is_item_no_and_item_name_inputs_does_not_match_item_no_and_item_name_in_the_database_update_version() == true) {
            $error["item_no_and_item_name_does_not_match"] = "Item No. or Item Name already exist!";
        }

        if ($error) {
            $_SESSION['Inventory_Update_Error'] = $error;

            echo 'inventory.php';
            die();
        }
        $boss = $_SESSION["admin_name"];
        $this->updateInventory($boss, $this->id, $this->itemNo, $this->itemName, $this->itemDescription, $this->quantity, $this->amount);
    }

    public function delete_inventory()
    {
        $fetch = $this->get_inventory_category_budget($this->boss);
        $budget = $fetch->fetch();
        $this->Amount = $budget['Amount'];

        $addedInventoryBudget = ((int) $this->Amount + (int) $this->amount);
        $this->redoDeductionInventoryBudget($this->boss, $addedInventoryBudget);
        $this->detele_id_inventory($this->id, $this->boss);
    }

    # ERROR HANDLERS FOR ADD INVENTORY

    # 1
    private function is_inputs_empty() # EMPTY INPUTS NOT ALLOWED!
    { // done
        return (empty($this->itemName) or empty($this->itemDescription) or empty($this->quantity) or empty($this->price)) ? true : false;
    }

    # 2
    private function is_item_name_not_a_string() # ITEM_NAME SHOULD NOT HAVE NUMBERS
    { //done
        return (!preg_match("/^[a-zA-Z ]*$/", $this->itemName)) ? true : false;
    }

    # 3
    private function is_item_description_not_valid() # SPECIAL CHARS NOT ALLOWED
    {
        return (!preg_match("/^[[a-zA-Z0-9 !?.]*$/", $this->itemDescription)) ? true : false;
    }

    # 4
    private function is_item_description_have_consecutive_spaces() # DOUBLE SPACES OR MORE NOT ALLOWED!
    {
        return (preg_match('/\s{2,}/', $this->itemDescription)) ? true : false;
    }

    # 5
    private function is_item_description_all_spaces() # DESCRIPTION ALL SPACES IS NOT ALLOWED!
    { // amo ni kay textarea  biskan spaces pasulod karon kung d pag trim()
        return (empty(trim($this->itemDescription))) ? true : false;
    }

    # 6
    private function item_name_already_exist() # ITEM NAME ALREADY EXIST IN THE DATABASE SPECIFICALLY SA OWNER!
    {
        return ($this->check_item_no_and_item_name_of_user_in_the_database($this->boss, $this->itemName)) ? true : false;
    }
    # 7
    private function is_inventory_category_budget_is_not_exist()
    { // done
        return ($this->check_inventory_category_budget_not_exist($this->boss)) ? true : false; # BOSS PARAMETER LNG KAY NA SPECIFY NAMAN TO NA INVENTORY NGA CATEGORY
    }
    # 8
    private function is_inventory_budget_not_good_enough()
    { // done
        $budget = $this->get_inventory_category_budget($this->boss);

        if ($budget !== false) {
            $budgetAmount = $budget->fetch();

            if ((int) $budgetAmount['Amount'] < (int) $this->amount) {
                return true;
            }
            if ((int) $budgetAmount['Amount'] > (int) $this->amount) {
                $this->Amount = $budgetAmount['Amount'];
            } else {
                return false;
            }
        } else {
            return false;
        }

    }
    //////////////////private functions for ERROR HANDLERS/////////////////////////////////

    //////////////////for addInventory and updateInventory ERROR HANDLERS private functions///////////////////

    /* para sa mag check if the inventory budget exist  kag budget amount{*/

    /* } */

    private function is_item_no_and_item_name_inputs_does_not_match_item_no_and_item_name_in_the_database_update_version()
    {

        // if($this->currentItemNo !== $this->itemNo) {
        //     if($this->check_item_no_if_exist($_SESSION["admin_name"], $this->itemNo)) { // para pwede ma update kag ilis kung wla sa ga exist sa database
        //         return true;
        //     }
        // }
        if ($this->currentItemName !== $this->itemName) {
            if ($this->check_item_name_if_exist($_SESSION["admin_name"], $this->itemName)) {
                return true;
            }
        }
        return false;
    }

    private function is_update_quantity_and_amount_not_integer()
    { // para sa update kay nd ni array ang inputs! done // need man
        //ilislan amount to price
        return (!preg_match("/^[0-9]*$/", $this->amount) or !preg_match("/^[0-9]*$/", $this->quantity)) ? true : false;
    }

    private function is_update_inputs_empty()
    { // para sa update kay nd ni array ang inputs! done //need islan amount to price
        return (empty($this->itemName) or empty($this->quantity) or empty($this->amount)) ? true : false;
    }

    private function is_update_item_name_not_a_string()
    { //para sa update kay nd ni array ang inputs! done
        return (!preg_match("/^[a-zA-Z ]*$/", $this->itemName)) ? true : false;
    }

    private function is_update_item_no_not_valid()
    {
        return (!preg_match("/^[a-zA-Z0-9]*$/", $this->itemNo)) ? true : false;
    }

    private function is_update_item_description_not_valid()
    {
        return (!preg_match("/^[[a-zA-Z0-9 !?.]*$/", $this->itemDescription)) ? true : false;
    }

    private function is_update_item_description_have_consecutive_spaces()
    {
        return (preg_match('/\s{2,}/', $this->itemDescription)) ? true : false;
    }

    private function is_update_item_description_all_spaces()
    { // amo ni kay textarea  biskan spaces pasulod karon kung d pag trim()
        return (empty(trim($this->itemDescription))) ? true : false;
    }

}
